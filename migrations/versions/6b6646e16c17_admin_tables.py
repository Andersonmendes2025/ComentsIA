"""admin tables

Revision ID: 6b6646e16c17
Revises: fix_missing_columns_002
Create Date: 2025-08-29 13:16:26.812963

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "6b6646e16c17"
down_revision = "fix_missing_columns_002"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin_action_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("admin_user_id", sa.String(length=255), nullable=False),
        sa.Column("target_user_id", sa.String(length=255), nullable=True),
        sa.Column("action", sa.String(length=64), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("ip", sa.String(length=64), nullable=True),
        sa.Column("user_agent", sa.String(length=256), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "billing_events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("event", sa.String(length=32), nullable=False),
        sa.Column("external_id", sa.String(length=64), nullable=True),
        sa.Column("occurred_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("handled_immediate", sa.Boolean(), nullable=True),
        sa.Column("sent_day1", sa.Boolean(), nullable=True),
        sa.Column("sent_day2", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("billing_events", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_billing_events_external_id"), ["external_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_billing_events_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "coupons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=True),
        sa.Column("discount_type", sa.String(length=16), nullable=False),
        sa.Column("discount_value", sa.Integer(), nullable=False),
        sa.Column("max_uses", sa.Integer(), nullable=True),
        sa.Column("uses_count", sa.Integer(), nullable=True),
        sa.Column("valid_from", sa.DateTime(timezone=True), nullable=True),
        sa.Column("valid_until", sa.DateTime(timezone=True), nullable=True),
        sa.Column("recurring", sa.Boolean(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "email_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=64), nullable=False),
        sa.Column("subject", sa.String(length=200), nullable=False),
        sa.Column("html", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
    )
    op.create_table(
        "finance_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(length=16), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("method", sa.String(length=16), nullable=False),
        sa.Column("percent", sa.Float(), nullable=True),
        sa.Column("amount_cents", sa.Integer(), nullable=True),
        sa.Column("recurrence", sa.String(length=16), nullable=True),
        sa.Column("start_month", sa.Date(), nullable=True),
        sa.Column("end_month", sa.Date(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("allocation_method", sa.String(length=24), nullable=True),
        sa.Column("cost_center", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "message_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("channel", sa.String(length=16), nullable=True),
        sa.Column("template_key", sa.String(length=64), nullable=True),
        sa.Column("event_ref_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("message_log", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_message_log_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "plan_prices",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plan_key", sa.String(length=32), nullable=False),
        sa.Column("price_cents", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=8), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("plan_key"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=32), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key"),
    )
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_user_id", sa.String(length=255), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("segmento", sa.String(length=64), nullable=True),
        sa.Column("cidade", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payment_transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("plan_key", sa.String(length=32), nullable=True),
        sa.Column("amount_cents", sa.Integer(), nullable=False),
        sa.Column("fees_cents", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=16), nullable=True),
        sa.Column("paid_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("external_id", sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("payment_transactions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_payment_transactions_external_id"),
            ["external_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_payment_transactions_plan_key"), ["plan_key"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_payment_transactions_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "role_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("perm", sa.String(length=64), nullable=False),
        sa.Column("level", sa.String(length=8), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_perm_overrides",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=False),
        sa.Column("perm", sa.String(length=64), nullable=False),
        sa.Column("level", sa.String(length=8), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_perm_overrides", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_perm_overrides_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "user_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=255), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("tipo", sa.String(length=16), nullable=False),
        sa.Column("texto", sa.Text(), nullable=True),
        sa.Column("due_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("done_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("owner_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("activities", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_activities_company_id"), ["company_id"], unique=False
        )

    op.create_table(
        "contacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("nome", sa.String(length=120), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=64), nullable=True),
        sa.Column("cargo", sa.String(length=120), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("contacts", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_contacts_company_id"), ["company_id"], unique=False
        )

    op.create_table(
        "tickets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("assunto", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=16), nullable=True),
        sa.Column("prioridade", sa.String(length=16), nullable=True),
        sa.Column("owner_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("tickets", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_tickets_company_id"), ["company_id"], unique=False
        )

    with op.batch_alter_table("review", schema=None) as batch_op:
        batch_op.drop_column("tags")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("review", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "tags", sa.VARCHAR(length=255), autoincrement=False, nullable=True
            )
        )

    with op.batch_alter_table("tickets", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tickets_company_id"))

    op.drop_table("tickets")
    with op.batch_alter_table("contacts", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_contacts_company_id"))

    op.drop_table("contacts")
    with op.batch_alter_table("activities", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_activities_company_id"))

    op.drop_table("activities")
    op.drop_table("user_roles")
    with op.batch_alter_table("user_perm_overrides", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_perm_overrides_user_id"))

    op.drop_table("user_perm_overrides")
    op.drop_table("role_permissions")
    with op.batch_alter_table("payment_transactions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_payment_transactions_user_id"))
        batch_op.drop_index(batch_op.f("ix_payment_transactions_plan_key"))
        batch_op.drop_index(batch_op.f("ix_payment_transactions_external_id"))

    op.drop_table("payment_transactions")
    op.drop_table("companies")
    op.drop_table("roles")
    op.drop_table("plan_prices")
    with op.batch_alter_table("message_log", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_message_log_user_id"))

    op.drop_table("message_log")
    op.drop_table("finance_items")
    op.drop_table("email_templates")
    op.drop_table("coupons")
    with op.batch_alter_table("billing_events", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_billing_events_user_id"))
        batch_op.drop_index(batch_op.f("ix_billing_events_external_id"))

    op.drop_table("billing_events")
    op.drop_table("admin_action_log")
    # ### end Alembic commands ###
